		Scanner sc = new Scanner(System.in);
		for (int testcase = 1; testcase <51; testcase++) {
			int n = sc.nextInt();
			int m = sc.nextInt();
			if (n == 0 && m == 0) {
				break;
			}
			int[][] a = new int[n][m];
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < m; j++) {
					a[i][j] = 0;
				}
			}
			int b = 1;
			for (int i = 1; i <= 3; i++) {
				int num1 = sc.nextInt();
				for (int j = 1; j <= num1; j++) {
					int x1 = sc.nextInt();
					x1--;
					int y1 = sc.nextInt();
					y1--;
					a[x1][y1] = b;
				}
				b++;
			}
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < m; j++) {
					// Mã
					if (a[i][j] == 2) {
						if (i + 2 < n && j + 1 < m) {
							if (a[i + 2][j + 1] != 1) {
								a[i + 2][j + 1] = 20;
							} 
						}
						if (i + 2 < n && j - 1 >= 0 && a[i + 2][j - 1] != 1&& a[i + 2][j - 1] != 2&& a[i + 2][j - 1] != 3) {
							a[i + 2][j - 1] = 20;
						}
						if (i - 2 >= 0 && j + 1 < m && a[i - 2][j + 1] != 1&& a[i - 2][j + 1] != 2&& a[i - 2][j + 1] != 3) {
							a[i - 2][j + 1] = 20;
						}
						if (i - 2 >= 0 && j - 1 >= 0 && a[i - 2][j - 1] != 1&& a[i - 2][j - 1] != 2&& a[i - 2][j - 1] != 3) {
							a[i - 2][j - 1] = 20;
						}
						if (j + 2 < m && i + 1 < n && a[i + 1][j + 2] != 1 && a[i + 1][j + 2] != 2 && a[i + 1][j + 2] != 3) {
							a[i + 1][j + 2] = 20;
						}
						if (j + 2 < m && i - 1 >= 0 && a[i - 1][j + 2] != 1 && a[i - 1][j + 2] != 2 && a[i - 1][j + 2] != 3) {
							a[i - 1][j + 2] = 20;
						}
						if (j - 2 >= 0 && i + 1 < n && a[i + 1][j - 2] != 1&& a[i + 1][j - 2] != 2&& a[i + 1][j - 2] != 3) {
							a[i + 1][j - 2] = 20;
						}
						if (j - 2 >= 0 && i - 1 >= 0 && a[i - 1][j - 2] != 1&& a[i - 1][j - 2] != 2&& a[i - 1][j - 2] != 3) {
							a[i - 1][j - 2] = 20;
						}
					}
					// Hậu
					if (a[i][j] == 1) {
						int c = i;
						int d = j;
						if (i - 1 >= 0) {
							for (int i2 = i; i2 >= 1; i2--) {
								if (a[i2 - 1][j] != 3 && a[i2 - 1][j] != 2 && a[i2 - 1][j] != 1) {
									a[i2 - 1][j] = 10;
								} else {
									break;
								}

							}
						}
						if (i + 1 < n) {
							for (int i2 = i; i2 < n - 1; i2++) {
								if (a[i2 + 1][j] != 3 && a[i2 + 1][j] != 2 && a[i2 + 1][j] != 1) {
									a[i2 + 1][j] = 10;
								} else {
									break;
								}
							}
						}
						if (j - 1 >= 0) {
							for (int j2 = j; j2 >= 1; j2--) {
								if (a[i][j2 - 1] != 3 && a[i][j2 - 1] != 2 && a[i][j2 - 1] != 1) {
									a[i][j2 - 1] = 10;
								} else {
									break;
								}
							}
						}
						if (j + 1 < m) {
							for (int j2 = j; j2 < m - 1; j2++) {
								if (a[i][j2 + 1] != 3 && a[i][j2 + 1] != 2 && a[i][j2 + 1] != 1) {
									a[i][j2 + 1] = 10;
								} else {
									break;
								}
							}
						}

						while (i + 1 < n && j + 1 < m) {
							if (a[i + 1][j + 1] != 3 && a[i + 1][j + 1] != 2 && a[i + 1][j + 1] != 1) {
								a[i + 1][j + 1] = 10;
								i++;
								j++;
							} else {
								break;
							}
						}
						i = c;
						j = d;
						while (i - 1 >= 0 && j - 1 >= 0) {
							if (a[i - 1][j - 1] != 3 && a[i - 1][j - 1] != 2 && a[i - 1][j - 1] != 1) {
								a[i - 1][j - 1] = 10;
								i--;
								j--;
							} else {
								break;
							}
						}
						i = c;
						j = d;
						while (i - 1 >= 0 && j + 1 < m) {
							if (a[i - 1][j + 1] != 3 && a[i - 1][j + 1] != 2 && a[i - 1][j + 1] != 1) {
								a[i - 1][j + 1] = 10;
								i--;
								j++;
							} else {
								break;
							}
						}
						i = c;
						j = d;
						while (i + 1 < n && j - 1 >= 0) {
							if (a[i + 1][j - 1] != 3 && a[i + 1][j - 1] != 2 && a[i + 1][j - 1] != 1) {
								a[i + 1][j - 1] = 10;
								i++;
								j--;
							} else {
								break;
							}
						}
						i = c;
						j = d;
					}
				}
			}
			int dem = 0;
			for (int i1 = 0; i1 < n; i1++) {
				//System.out.println();
				for (int j = 0; j < m; j++) {
					if (a[i1][j] == 0) {
						dem++;
					}
					//System.out.print(a[i1][j]+" ");
				}
			}
			System.out.println("Board " + testcase + " has " + dem + " safe squares. ");
		}
